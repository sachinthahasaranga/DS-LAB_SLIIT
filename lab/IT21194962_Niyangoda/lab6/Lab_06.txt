IT21194962
NIYANGODA S A N S H
LAB 06

----------------------------
----------------------------

create table dept(
deptno char(3),
deptname varchar(36) not null,
mgrno char(6),
admrdept char(3),
constraint pk_dept primary key (deptno),
constraint fk_dept_admrdept_deptno foreign key (admrdept) references dept(deptno));

---------------------------------

create table emp(
empno char(6),
firstname varchar(12) not null,
midinit char(1) not null,
lastname varchar(15) not null,
workdept char(3),
phoneno char(9),
hiredate date,
job char (15),
edlevel number(2),
sex char(1),
birthdate date,
salary number(8,2),
bonus number(8,2),
comm number(8,2),
constraint pk_emp primary key (empno),
constraint fk_emp_dept foreign key (workdept) references dept(deptno));

---------------------------------


insert into dept values('1','Admin','','');
insert into dept values('2','Academic','','1');
insert into dept values('3','CSD','','1');

---------------------------------

insert into emp values('111','Shiran','M', 'Wikramasinghe','3', '74747474', '01-Jan-2000','Manager','8','F','12-Jan-1970','30000','5000','15000');

insert into emp values('100','Saman','K', 'Kumara','2', '67699099', '01-Jan-2000','Instructor','4','M','12-Jan-1970','10000','1000','5000');

insert into emp values('101','Rukshan','A', 'Weerakoon','3', '88778099', '02-feb-2001','Engineer','5','M','02-Jan-1960','25000','2000','10000');

insert into emp values('102','Anusha','P','Sandamalie','2', '33778011', '04-jun-2000','Lecturer','4','F','05-mar-1960','15000','1500','7000');

insert into emp values('103','Suresh','R','Wikramasuriya','1', '77998011', '01-jan-2000','Acountant','3','M','06-mar-1975','9000','1000','4000');

insert into emp values('104','Inoka','E','Edirithilaka','3','71123123','4-apr-2002','Programmer','3','F','5-jan-1976','15000','2000','3000');

insert into emp values('105','Kamal','A','Prasanna','2','3345645','7-sep-2001','Lecturer','3','M','1-feb-1975','15000','1500','7000');

insert into emp values('106','Harsha','U','Fernando','1','4134534','05-MAY-2000','Manager','5','F','5-May-1975','15000','2000','3000');

insert into emp values('107','Ganga','S','Peshala','2','1467467','4-Apr-2000','Instructor','3','F','3-Mar-1977','10000','1000','5000');

insert into emp values('108','Tharaka','H','Ranasighe','2','77300300','1-Apr-2002','Lecturer','2','M','3-Jun-1975','15000','1500','7000');

insert into emp values('109','Amani','T','Sakunthala','2','77890890','4-Feb-2001','Instructor','1','F','2-Feb-1978','10000','1000','3000');

insert into emp values('110','MAhesha','S','Kapurubandara','2','77111111','01-AUG-2000','Manager','7','F','20-JAN-1958','30000','5000','15000');

---------------------------------

create table PLAN_TABLE (
	statement_id 	varchar2(30),
	timestamp    	date,
	remarks      	varchar2(80),
	operation    	varchar2(30),
	options       	varchar2(255),
	object_node  	varchar2(128),
	object_owner 	varchar2(30),
	object_name  	varchar2(30),
	object_instance numeric,
	object_type     varchar2(30),
	optimizer       varchar2(255),
	search_columns  number,
	id		numeric,
	parent_id	numeric,
	position	numeric,
	cost		numeric,
	cardinality	numeric,
	bytes		numeric,
	other_tag       varchar2(255),
	partition_start varchar2(255),
        partition_stop  varchar2(255),
        partition_id    numeric,
	other		long,
	distribution    varchar2(30),
	cpu_cost	numeric,
	io_cost		numeric,
	temp_space	numeric);

---------------------------------

CREATE INDEX XWORKDEPT ON emp(workdept);

---------------------------------

explain plan for 
select e.lastname, d.mgrno
from emp e, dept d
where d.admrdept='A00' and e.workdept=d.deptno;

---------------------------------

CREATE INDEX XADMRDEPT ON DEPT(admrdept);

---------------------------------

explain plan for 
select e.lastname, d.mgrno
from emp e, dept d
where d.admrdept='A00' and e.workdept=d.deptno;

---------------------------------


CREATE INDEX XJOB ON emp(job);

---------------------------------

EXPLAIN PLAN FOR
SELECT e.lastname, d.mgrno
FROM emp e, dept d
WHERE d.admrdept='A00' AND e.workdept=d.deptno AND e.job='DESIGNER';

---------------------------------



CREATE INDEX XEDLEVEL ON emp(edlevel);
CREATE INDEX XSALARY ON emp(salary);

---------------------------------

EXPLAIN PLAN FOR
SELECT AVG(e.salary)
FROM emp e
WHERE e.edlevel > 10 AND e.salary BETWEEN 30000 AND 70000;

---------------------------------



Select index_name
From user_indexes
Where table_name = 'EMP';

---------------------------------



view code

select '| Operation                  |  Name              |  Rows | Bytes|  Cost  |  TQ  |IN-OUT| PQ Distrib | Pstart| Pstop |'  as "Plan Table" from dual
union all
select '----------------------------------------------------------------------------------------------------------------------' from dual
union all
select * from
(select /*+ no_merge */
       rpad('| '||substr(lpad(' ',1*(level-1))||operation||
            decode(options, null,'',' '||options), 1, 28), 29, ' ')||'|'||
       rpad(substr(decode(substr(object_name, 1, 7), 'SYS_LE_', null, object_name)
                   ||' ',1, 19), 20, ' ')||'|'||
       lpad(decode(cardinality,null,'  ',
                decode(sign(cardinality-1000), -1, cardinality||' ', 
                decode(sign(cardinality-1000000), -1, trunc(cardinality/1000)||'K', 
                decode(sign(cardinality-1000000000), -1, trunc(cardinality/1000000)||'M', 
                       trunc(cardinality/1000000000)||'G')))), 7, ' ') || '|' ||
       lpad(decode(bytes,null,' ',
                decode(sign(bytes-1024), -1, bytes||' ', 
                decode(sign(bytes-1048576), -1, trunc(bytes/1024)||'K', 
                decode(sign(bytes-1073741824), -1, trunc(bytes/1048576)||'M', 
                       trunc(bytes/1073741824)||'G')))), 6, ' ') || '|' ||
       lpad(decode(cost,null,' ',
                decode(sign(cost-10000000), -1, cost||' ', 
                decode(sign(cost-1000000000), -1, trunc(cost/1000000)||'M', 
                       trunc(cost/1000000000)||'G'))), 8, ' ') || '|' ||
       lpad(decode(object_node,null,' ',
              substr(object_node,length(object_node)-3,1) || ',' || 
              substr(object_node,length(object_node)-1,2))||' ', 6, ' ') || '|' ||
       lpad(decode(other_tag, null,' ',
            decode(other_tag,'PARALLEL_TO_SERIAL', ' P->S', 
            decode(other_tag, 'PARALLEL_TO_PARALLEL', ' P->P', 
            decode(other_tag, 'PARALLEL_COMBINED_WITH_PARENT', ' PCWP', 
            decode(other_tag, 'PARALLEL_FROM_SERIAL', ' S->P', 
            decode(other_tag, 'PARALLEL_COMBINED_WITH_CHILD', ' PCWC', 
                   decode(other_tag,null,' ',other_tag)))))))||' ', 6, ' ') || '|' ||
       rpad(' '||decode(distribution, null,' ',
          decode(distribution, 'PARTITION (ROWID)', 'PART (RID)', 
          decode(distribution, 'PARTITION (KEY)', 'PART (KEY)', 
          decode(distribution, 'ROUND-ROBIN', 'RND-ROBIN', 
          decode(distribution, 'BROADCAST', 'BROADCAST', distribution))))), 12, ' ') || '|' ||
       lpad(decode(partition_start, 'ROW LOCATION', 'ROWID', 
            decode(partition_start, 'KEY', 'KEY', decode(partition_start, 
            'KEY(INLIST)', 'KEY(I)', decode(substr(partition_start, 1, 6), 
            'NUMBER', substr(substr(partition_start, 8, 10), 1, 
            length(substr(partition_start, 8, 10))-1), 
            decode(partition_start,null,' ',partition_start)))))||' ', 7, ' ')|| '|' ||
       lpad(decode(partition_stop, 'ROW LOCATION', 'ROW L', 
          decode(partition_stop, 'KEY', 'KEY', decode(partition_stop, 
          'KEY(INLIST)', 'KEY(I)', decode(substr(partition_stop, 1, 6), 
          'NUMBER', substr(substr(partition_stop, 8, 10), 1, 
          length(substr(partition_stop, 8, 10))-1), 
          decode(partition_stop,null,' ',partition_stop)))))||' ', 7, ' ')||'|' as "Explain plan"
from plan_table
start with id=0 and timestamp = (select max(timestamp) from plan_table 
                                 where id=0 and nvl(statement_id, ' ') not like 'SYS_LE%')
                and nvl(statement_id, ' ') not like 'SYS_LE%'
connect by (prior id = parent_id 
        and prior nvl(statement_id, ' ') = nvl(statement_id, ' ')
        and prior timestamp <= timestamp)
        or 
       (prior nvl(object_name, ' ') like 'SYS_LE%' and prior nvl(object_name, ' ') = nvl(statement_id, ' ')
        and id = 0 and prior timestamp <= timestamp)
order siblings by id, position)
union all
select '----------------------------------------------------------------------------------------------------------------------' from dual ;









---------------------------------

DROP INDEX XSALARY;
DROP INDEX XEDLEVEL;
DROP INDEX XJOB;
DROP INDEX XWORKDEPT;
DROP TABLE PLAN_TABLE;
DROP TABLE emp;
DROP TABLE dept;

